(()=>{"use strict";var n={740:(n,e,t)=>{t.d(e,{Z:()=>o});var i=t(537),r=t.n(i),a=t(645),s=t.n(a)()(r());s.push([n.id,"*{\n    margin: 0;\n    padding: 0;\n}\n\nhtml{\n    height: 100%;\n}\n\nbody{\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.content{\n    flex:1;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n}\n\n\n.project-area{\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    align-items: stretch;\n    background-color: #797777;\n    padding: 20px;\n    gap: 50px;\n}\n\n.user-info{\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    font-size: 20px;\n}\n\n.projects{\n    flex:1;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.add-list{\n    align-self: stretch;\n    display: flex;\n    gap: 0;\n}\n\n.add-list > input{\n    flex: 1;\n    font-size: 15px;   \n    padding: 5px; \n}\n\n.add-list-button{\n    font-size: 15px;    \n    padding: 5px;\n}\n\n.list-element-container{\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.item-element-container,\n.header{\n    display: flex;\n    gap: 5px;\n    align-items: center;\n}\n\n.list-icon{\n    width: 20px;\n    height: 20px;\n}\n\n.list-name{\n    font-size: 25px;\n    font-weight: 600;\n}\n\n.item-element{\n    display: flex;\n    gap: 10px;\n}\n\n.item-icon{\n    padding-left: 20px;\n    width: 20px;\n    height: 20px;\n}\n\n.item-title{\n    font-size: 15px;\n}","",{version:3,sources:["webpack://./src/css/styles.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,MAAM;IACN,aAAa;IACb,8BAA8B;AAClC;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,sBAAsB;IACtB,oBAAoB;IACpB,yBAAyB;IACzB,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,MAAM;IACN,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,MAAM;AACV;;AAEA;IACI,OAAO;IACP,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;AAEA;;IAEI,aAAa;IACb,QAAQ;IACR,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,eAAe;AACnB",sourcesContent:["*{\n    margin: 0;\n    padding: 0;\n}\n\nhtml{\n    height: 100%;\n}\n\nbody{\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.content{\n    flex:1;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n}\n\n\n.project-area{\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    align-items: stretch;\n    background-color: #797777;\n    padding: 20px;\n    gap: 50px;\n}\n\n.user-info{\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    font-size: 20px;\n}\n\n.projects{\n    flex:1;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.add-list{\n    align-self: stretch;\n    display: flex;\n    gap: 0;\n}\n\n.add-list > input{\n    flex: 1;\n    font-size: 15px;   \n    padding: 5px; \n}\n\n.add-list-button{\n    font-size: 15px;    \n    padding: 5px;\n}\n\n.list-element-container{\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.item-element-container,\n.header{\n    display: flex;\n    gap: 5px;\n    align-items: center;\n}\n\n.list-icon{\n    width: 20px;\n    height: 20px;\n}\n\n.list-name{\n    font-size: 25px;\n    font-weight: 600;\n}\n\n.item-element{\n    display: flex;\n    gap: 10px;\n}\n\n.item-icon{\n    padding-left: 20px;\n    width: 20px;\n    height: 20px;\n}\n\n.item-title{\n    font-size: 15px;\n}"],sourceRoot:""}]);const o=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(i)for(var o=0;o<this.length;o++){var c=this[o][0];null!=c&&(s[c]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);i&&s[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var a={},s=[],o=0;o<n.length;o++){var c=n[o],l=i.base?c[0]+i.base:c[0],A=a[l]||0,p="".concat(l," ").concat(A);a[l]=A+1;var d=t(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var f=r(u,i);i.byIndex=o,e.splice(o,0,{identifier:p,updater:f,references:1})}s.push(p)}return s}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=i(n=n||[],r=r||{});return function(n){n=n||[];for(var s=0;s<a.length;s++){var o=t(a[s]);e[o].references--}for(var c=i(n,r),l=0;l<a.length;l++){var A=t(a[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,r&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(i){var r=e[i];if(void 0!==r)return r.exports;var a=e[i]={id:i,exports:{}};return n[i](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{class n{constructor(n,e,t){this._title=n,this._description=e,this._priority=t,this._status="to-do"}get description(){return this._description}get title(){return this._title}get priority(){return this._priority}set description(n){this._description=n}set title(n){this._title=n}set priority(n){this._priority=n}}class e{constructor(n){this._name=n,this._list=[]}addItem(e){return e instanceof n&&(this._list.push(e),!0)}deleteItem(n){for(let e=0;e<this._list.length;e++)if(this._list[e].title===n)return this._list.splice(e,1),!0;return!1}get name(){return this._name}set name(n){this._name=n}get list(){return this._list}set list(n){this._list=n}}var i=t(379),r=t.n(i),a=t(795),s=t.n(a),o=t(569),c=t.n(o),l=t(565),A=t.n(l),p=t(216),d=t.n(p),u=t(589),f=t.n(u),m=t(740),h={};h.styleTagTransform=f(),h.setAttributes=A(),h.insert=c().bind(null,"head"),h.domAPI=s(),h.insertStyleElement=d(),r()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals;const g=t.p+"d60948655b17aebbbd57.svg",x=t.p+"c43696e7e67835ab560e.svg";class C{static appendListElement(n){const e=document.createElement("div");e.className="list-element-container";const t=new Image;t.className="list-icon",t.src=x;const i=document.createElement("div");i.className="list-name",i.textContent=n.name;const r=document.createElement("div");r.className="header",r.appendChild(t),r.appendChild(i),e.appendChild(r);for(let t=0;t<n.list.length;t++){let i=n.list[t];console.log(i),e.appendChild(C.createItemElement(i))}document.querySelector(".projects").appendChild(e)}static deleteListElement(n){const e=document.querySelector(".projects");for(let t=0;t<e.childNodes.length;t++){const i=e.childNodes[t];if(i.className===n)return e.removeChild(i),!0}return!1}static createItemElement(n){const e=document.createElement("div");e.className="item-element-container";const t=new Image;t.src=g,t.className="item-icon";const i=document.createElement("div");return console.log(n),console.log(n.title),i.textContent=n.title,i.className="item-title",e.appendChild(t),e.appendChild(i),console.log("hi\n"+e),e}static applyAddingList(){const n=document.querySelector(".add-list-input"),t=n.value;if(""===t)return;const i=new e(t);C.appendListElement(i),n.value=""}}document.querySelector(".add-list-button").addEventListener("click",C.applyAddingList);let I=new n("desc","tit",1),y=new n("desc","tit",1),v=new e("work");v.addItem(I),v.addItem(y),C.appendListElement(v)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,