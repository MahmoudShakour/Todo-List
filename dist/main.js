(()=>{"use strict";var n={740:(n,e,t)=>{t.d(e,{Z:()=>s});var i=t(537),o=t.n(i),a=t(645),r=t.n(a)()(o());r.push([n.id,"*{\n    margin: 0;\n    padding: 0;\n}\n\nhtml{\n    height: 100%;\n}\n\nbody{\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.content{\n    flex:1;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n}\n\n\n.project-area{\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    align-items: stretch;\n    background-color: #797777;\n    padding: 20px;\n    gap: 50px;\n}\n\n.user-info{\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    font-size: 20px;\n}\n\n.projects{\n    flex:1;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.add-list{\n    align-self: stretch;\n    display: flex;\n    gap: 0;\n}\n\n.add-list > input{\n    flex: 1;\n    font-size: 15px;   \n    padding: 5px; \n}\n\n.add-list-button{\n    font-size: 15px;    \n    padding: 5px;\n}\n\n.list-element-container{\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.item-element-container,\n.header{\n    display: flex;\n    gap: 5px;\n    align-items: center;\n}\n\n.list-icon{\n    width: 20px;\n    height: 20px;\n}\n\n.list-name{\n    font-size: 25px;\n    font-weight: 600;\n}\n\n.item-element{\n    display: flex;\n    gap: 10px;\n}\n\n.item-icon{\n    padding-left: 20px;\n    width: 20px;\n    height: 20px;\n}\n\n.item-title{\n    font-size: 25px;\n}\n\n.info-area{\n    display: flex;\n    justify-content: center;\n}\n\n.display-container{\n    padding: 40px 0 40px 0;\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n}\n\n.project-name{\n    font-size: 30px;\n    font-weight: 700;\n    padding: 10px;\n}\n\n.add-item-button{\n    border: none;\n    font-size: 25px;\n    font-weight: 700;\n    background-color: white;\n    padding: 10px ;\n\n}\n\n.project-name:hover,\n.add-item-button:hover\n{\n    background-color: #bcb5b5;\n    border-radius: 20px;    \n}\n\n\n.item-container{\n    display: flex;\n    flex-direction: column;\n}\n\n.item-title-display{\n    font-size: 30px;\n    font-weight: bold;\n}\n\n.item-description-display{\n    font-size: 20px;\n}\n\n.item-priority-display{\n    font-size: 20px;\n}\n.item-container > * {\n    border-radius: 20px;\n    padding: 5px;\n}\n\n.item-status-display{\n    font-size: 20px;\n    \n}\n\n.toggling{\n    background-color: red;\n}\n\n.item-form{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border: 1px solid black;\n    background-color: rgb(116, 112, 112);\n    padding: 50px;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.item-form > * {\n    padding: 20px;\n    font-size: 30px;\n    font-weight: 600;\n}\n\n","",{version:3,sources:["webpack://./src/css/styles.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,MAAM;IACN,aAAa;IACb,8BAA8B;AAClC;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,sBAAsB;IACtB,oBAAoB;IACpB,yBAAyB;IACzB,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,MAAM;IACN,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,MAAM;AACV;;AAEA;IACI,OAAO;IACP,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;AAEA;;IAEI,aAAa;IACb,QAAQ;IACR,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,eAAe;IACf,gBAAgB;IAChB,uBAAuB;IACvB,cAAc;;AAElB;;AAEA;;;IAGI,yBAAyB;IACzB,mBAAmB;AACvB;;;AAGA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;AACA;IACI,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,eAAe;;AAEnB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,uBAAuB;IACvB,oCAAoC;IACpC,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,eAAe;IACf,gBAAgB;AACpB",sourcesContent:["*{\n    margin: 0;\n    padding: 0;\n}\n\nhtml{\n    height: 100%;\n}\n\nbody{\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.content{\n    flex:1;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n}\n\n\n.project-area{\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    align-items: stretch;\n    background-color: #797777;\n    padding: 20px;\n    gap: 50px;\n}\n\n.user-info{\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    font-size: 20px;\n}\n\n.projects{\n    flex:1;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.add-list{\n    align-self: stretch;\n    display: flex;\n    gap: 0;\n}\n\n.add-list > input{\n    flex: 1;\n    font-size: 15px;   \n    padding: 5px; \n}\n\n.add-list-button{\n    font-size: 15px;    \n    padding: 5px;\n}\n\n.list-element-container{\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.item-element-container,\n.header{\n    display: flex;\n    gap: 5px;\n    align-items: center;\n}\n\n.list-icon{\n    width: 20px;\n    height: 20px;\n}\n\n.list-name{\n    font-size: 25px;\n    font-weight: 600;\n}\n\n.item-element{\n    display: flex;\n    gap: 10px;\n}\n\n.item-icon{\n    padding-left: 20px;\n    width: 20px;\n    height: 20px;\n}\n\n.item-title{\n    font-size: 25px;\n}\n\n.info-area{\n    display: flex;\n    justify-content: center;\n}\n\n.display-container{\n    padding: 40px 0 40px 0;\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n}\n\n.project-name{\n    font-size: 30px;\n    font-weight: 700;\n    padding: 10px;\n}\n\n.add-item-button{\n    border: none;\n    font-size: 25px;\n    font-weight: 700;\n    background-color: white;\n    padding: 10px ;\n\n}\n\n.project-name:hover,\n.add-item-button:hover\n{\n    background-color: #bcb5b5;\n    border-radius: 20px;    \n}\n\n\n.item-container{\n    display: flex;\n    flex-direction: column;\n}\n\n.item-title-display{\n    font-size: 30px;\n    font-weight: bold;\n}\n\n.item-description-display{\n    font-size: 20px;\n}\n\n.item-priority-display{\n    font-size: 20px;\n}\n.item-container > * {\n    border-radius: 20px;\n    padding: 5px;\n}\n\n.item-status-display{\n    font-size: 20px;\n    \n}\n\n.toggling{\n    background-color: red;\n}\n\n.item-form{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border: 1px solid black;\n    background-color: rgb(116, 112, 112);\n    padding: 50px;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.item-form > * {\n    padding: 20px;\n    font-size: 30px;\n    font-weight: 600;\n}\n\n"],sourceRoot:""}]);const s=r},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(i)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(r[A]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);i&&r[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var a={},r=[],s=0;s<n.length;s++){var A=n[s],l=i.base?A[0]+i.base:A[0],c=a[l]||0,d="".concat(l," ").concat(c);a[l]=c+1;var p=t(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,i);i.byIndex=s,e.splice(s,0,{identifier:d,updater:m,references:1})}r.push(d)}return r}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=i(n=n||[],o=o||{});return function(n){n=n||[];for(var r=0;r<a.length;r++){var s=t(a[r]);e[s].references--}for(var A=i(n,o),l=0;l<a.length;l++){var c=t(a[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,o&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(i){var o=e[i];if(void 0!==o)return o.exports;var a=e[i]={id:i,exports:{}};return n[i](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0;var i={};(()=>{t.d(i,{i:()=>y});class n{constructor(n,e,t){this._title=n,this._description=e,this._priority=t,this._status="To Do"}get description(){return this._description}get title(){return this._title}get priority(){return this._priority}get status(){return this._status}set description(n){this._description=n}set title(n){this._title=n}set priority(n){this._priority=n}set status(n){this._status=n}}class e{constructor(n){this._name=n,this._list=[]}addItem(e){return e instanceof n&&(this._list.push(e),!0)}deleteItem(n){for(let e=0;e<this._list.length;e++)if(this._list[e].title===n)return this._list.splice(e,1),!0;return!1}get name(){return this._name}set name(n){this._name=n}get list(){return this._list}set list(n){this._list=n}}var o=t(379),a=t.n(o),r=t(795),s=t.n(r),A=t(569),l=t.n(A),c=t(565),d=t.n(c),p=t(216),u=t.n(p),m=t(589),f=t.n(m),C=t(740),h={};h.styleTagTransform=f(),h.setAttributes=d(),h.insert=l().bind(null,"head"),h.domAPI=s(),h.insertStyleElement=u(),a()(C.Z,h),C.Z&&C.Z.locals&&C.Z.locals;const g=t.p+"d60948655b17aebbbd57.svg",x=t.p+"c43696e7e67835ab560e.svg";class I{static appendListElement(n){const e=document.createElement("div");e.className="list-element-container";const t=new Image;t.className="list-icon",t.src=x;const i=document.createElement("div");i.className="list-name",i.textContent=n.name;const o=document.createElement("div");o.className="header",o.appendChild(t),o.appendChild(i),o.addEventListener("click",(()=>{I.displayList(n)})),e.appendChild(o);for(let t=0;t<n.list.length;t++){let i=n.list[t];e.appendChild(I.createItemElement(i))}document.querySelector(".projects").appendChild(e),y.addToDoList(n)}static deleteListElement(n){const e=document.querySelector(".projects");y.deleteToDoList(n);for(let t=0;t<e.childNodes.length;t++){const i=e.childNodes[t];if(i.className===n)return e.removeChild(i),!0}return!1}static createItemElement(n){const e=document.createElement("div");e.className="item-element-container";const t=new Image;t.src=g,t.className="item-icon";const i=document.createElement("div");return i.textContent=n.title,i.className="item-title",e.appendChild(t),e.appendChild(i),e}static applyAddingList(){const n=document.querySelector(".add-list-input"),t=n.value;if(""===t)return;const i=new e(t);return I.appendListElement(i),n.value="",i}static displayList(n){const e=document.createElement("div");e.className="display-container";const t=document.createElement("div");t.className="project-name",t.textContent=n.name;const i=document.createElement("button");i.className="add-item-button",i.textContent="+ Add Item",i.addEventListener("click",(()=>{I.showItemForm(n)})),e.appendChild(t),e.appendChild(i);for(let t=0;t<n.list.length;t++)e.appendChild(I.displayItem(n.list[t]));const o=document.querySelector(".info-area");for(;void 0!==o.childNodes[0];)o.removeChild(o.childNodes[0]);o.appendChild(e)}static displayItem(n){const e=document.createElement("div");e.className="item-container";const t=document.createElement("div");t.className="item-title-display",t.textContent=n.title;const i=document.createElement("div");i.className="item-description-display",i.textContent="DESCRIPTION: "+n.description;const o=document.createElement("div");o.className="item-priority-display",o.textContent="Priority: "+n.priority;const a=document.createElement("div");return a.className="item-status-display",a.classList.add("toggling"),a.textContent="STATUS: "+n.status,I.statusColor(a),e.appendChild(t),e.appendChild(i),e.appendChild(o),e.appendChild(a),e}static statusColor(n){n.addEventListener("click",(()=>{"STATUS: To Do"===n.textContent?n.textContent="STATUS: Done":n.textContent="STATUS: To Do",n.classList.toggle("toggling")}))}static showItemForm(e){const t=document.createElement("form");t.className="item-form";const i=document.createElement("input");i.placeholder="Title",i.name="Title",i.required=!0;const o=document.createElement("input");o.placeholder="Description",o.name="Description",o.required=!0;const a=document.createElement("input");a.placeholder="Priority",a.name="Priority",a.required=!0,a.type="number";const r=document.createElement("input");r.name="dueDate",r.required=!0,r.type="date";const s=document.createElement("button");let A;s.textContent="Add Item",s.name="Add Item",t.appendChild(i),t.appendChild(o),t.appendChild(a),t.appendChild(r),t.appendChild(s),document.querySelector("body").appendChild(t),t.addEventListener("submit",(i=>{i.preventDefault(),A=new n(i.currentTarget.Title.value,i.currentTarget.Description.value,i.currentTarget.Priority.value),e.list.push(A);let o=I.displayItem(A);document.querySelector(".display-container").appendChild(o),document.querySelector("body").removeChild(t)}))}}document.querySelector(".add-list-button").addEventListener("click",I.applyAddingList);let y=new class{constructor(){this._list=[]}addToDoList(n){return n instanceof e&&(this._list.push(n),!0)}deleteToDoList(n){for(let e=0;e<this._list.length;e++)if(this._list[e].name===n)return this._list.splice(e,1),!0;return!1}get list(){return this._list}set list(n){this._list=n}}("mahmoud Ahmed Abdulshakour"),b=new n("TOP","FINISH TODOLIST PROJECT",1),B=new e("Work");B.addItem(b),I.appendListElement(B),I.displayList(B)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cEIsT0FEQW5NLEtBQUt5SSxNQUFNNUYsT0FBT3JDLEVBQUUsSUFDYixFQUdmLE9BQU8sQ0FDWCxDQUVJVixXQUNBLE9BQU9FLEtBQUt5SSxLQUNoQixDQUVJM0ksU0FBS3VJLEdBQ0xySSxLQUFLeUksTUFBTUosQ0FDZixHRHBCb0IsOEJBRXBCbkksRUFBSyxJQUFJeUgsRUFBSyxNQUFNLDBCQUEwQixHQUM5QzdILEVBQUssSUFBSXdJLEVBQUssUUFDbEJ4SSxFQUFLNEksUUFBUXhJLEdBR2I0SSxFQUFnQnVCLGtCQUFrQnZLLEdBQ2xDZ0osRUFBZ0JXLFlBQVkzSixFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2Nzcy9zdHlsZXMuY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2NsYXNzZXMvSXRlbS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvY2xhc3Nlcy9MaXN0LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9jc3Mvc3R5bGVzLmNzcz85OWEzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9ET00vZG9tTWFuaXB1bGF0b3IuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9jbGFzc2VzL1Byb2plY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIqe1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxufVxcblxcbmh0bWx7XFxuICAgIGhlaWdodDogMTAwJTtcXG59XFxuXFxuYm9keXtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4uY29udGVudHtcXG4gICAgZmxleDoxO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA0ZnI7XFxufVxcblxcblxcbi5wcm9qZWN0LWFyZWF7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGp1c3RpZnktY29udGVudDogc3RhcnQ7XFxuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzk3Nzc3O1xcbiAgICBwYWRkaW5nOiAyMHB4O1xcbiAgICBnYXA6IDUwcHg7XFxufVxcblxcbi51c2VyLWluZm97XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMTBweDtcXG4gICAgZm9udC1zaXplOiAyMHB4O1xcbn1cXG5cXG4ucHJvamVjdHN7XFxuICAgIGZsZXg6MTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAyMHB4O1xcbn1cXG5cXG4uYWRkLWxpc3R7XFxuICAgIGFsaWduLXNlbGY6IHN0cmV0Y2g7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogMDtcXG59XFxuXFxuLmFkZC1saXN0ID4gaW5wdXR7XFxuICAgIGZsZXg6IDE7XFxuICAgIGZvbnQtc2l6ZTogMTVweDsgICBcXG4gICAgcGFkZGluZzogNXB4OyBcXG59XFxuXFxuLmFkZC1saXN0LWJ1dHRvbntcXG4gICAgZm9udC1zaXplOiAxNXB4OyAgICBcXG4gICAgcGFkZGluZzogNXB4O1xcbn1cXG5cXG4ubGlzdC1lbGVtZW50LWNvbnRhaW5lcntcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiA1cHg7XFxufVxcblxcbi5pdGVtLWVsZW1lbnQtY29udGFpbmVyLFxcbi5oZWFkZXJ7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogNXB4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ubGlzdC1pY29ue1xcbiAgICB3aWR0aDogMjBweDtcXG4gICAgaGVpZ2h0OiAyMHB4O1xcbn1cXG5cXG4ubGlzdC1uYW1le1xcbiAgICBmb250LXNpemU6IDI1cHg7XFxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XFxufVxcblxcbi5pdGVtLWVsZW1lbnR7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuLml0ZW0taWNvbntcXG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xcbiAgICB3aWR0aDogMjBweDtcXG4gICAgaGVpZ2h0OiAyMHB4O1xcbn1cXG5cXG4uaXRlbS10aXRsZXtcXG4gICAgZm9udC1zaXplOiAyNXB4O1xcbn1cXG5cXG4uaW5mby1hcmVhe1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLmRpc3BsYXktY29udGFpbmVye1xcbiAgICBwYWRkaW5nOiA0MHB4IDAgNDBweCAwO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDMwcHg7XFxufVxcblxcbi5wcm9qZWN0LW5hbWV7XFxuICAgIGZvbnQtc2l6ZTogMzBweDtcXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gICAgcGFkZGluZzogMTBweDtcXG59XFxuXFxuLmFkZC1pdGVtLWJ1dHRvbntcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBmb250LXNpemU6IDI1cHg7XFxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgICBwYWRkaW5nOiAxMHB4IDtcXG5cXG59XFxuXFxuLnByb2plY3QtbmFtZTpob3ZlcixcXG4uYWRkLWl0ZW0tYnV0dG9uOmhvdmVyXFxue1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmNiNWI1O1xcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4OyAgICBcXG59XFxuXFxuXFxuLml0ZW0tY29udGFpbmVye1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4uaXRlbS10aXRsZS1kaXNwbGF5e1xcbiAgICBmb250LXNpemU6IDMwcHg7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cXG5cXG4uaXRlbS1kZXNjcmlwdGlvbi1kaXNwbGF5e1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxufVxcblxcbi5pdGVtLXByaW9yaXR5LWRpc3BsYXl7XFxuICAgIGZvbnQtc2l6ZTogMjBweDtcXG59XFxuLml0ZW0tY29udGFpbmVyID4gKiB7XFxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XFxuICAgIHBhZGRpbmc6IDVweDtcXG59XFxuXFxuLml0ZW0tc3RhdHVzLWRpc3BsYXl7XFxuICAgIGZvbnQtc2l6ZTogMjBweDtcXG4gICAgXFxufVxcblxcbi50b2dnbGluZ3tcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xcbn1cXG5cXG4uaXRlbS1mb3Jte1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogNTAlO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDExNiwgMTEyLCAxMTIpO1xcbiAgICBwYWRkaW5nOiA1MHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDE1cHg7XFxufVxcblxcbi5pdGVtLWZvcm0gPiAqIHtcXG4gICAgcGFkZGluZzogMjBweDtcXG4gICAgZm9udC1zaXplOiAzMHB4O1xcbiAgICBmb250LXdlaWdodDogNjAwO1xcbn1cXG5cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY3NzL3N0eWxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxTQUFTO0lBQ1QsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2Isc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksTUFBTTtJQUNOLGFBQWE7SUFDYiw4QkFBOEI7QUFDbEM7OztBQUdBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixzQkFBc0I7SUFDdEIsb0JBQW9CO0lBQ3BCLHlCQUF5QjtJQUN6QixhQUFhO0lBQ2IsU0FBUztBQUNiOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixTQUFTO0lBQ1QsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLE1BQU07SUFDTixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2IsTUFBTTtBQUNWOztBQUVBO0lBQ0ksT0FBTztJQUNQLGVBQWU7SUFDZixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFFBQVE7QUFDWjs7QUFFQTs7SUFFSSxhQUFhO0lBQ2IsUUFBUTtJQUNSLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0QixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLHVCQUF1QjtJQUN2QixjQUFjOztBQUVsQjs7QUFFQTs7O0lBR0kseUJBQXlCO0lBQ3pCLG1CQUFtQjtBQUN2Qjs7O0FBR0E7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGVBQWU7O0FBRW5COztBQUVBO0lBQ0kscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixTQUFTO0lBQ1QsZ0NBQWdDO0lBQ2hDLHVCQUF1QjtJQUN2QixvQ0FBb0M7SUFDcEMsYUFBYTtJQUNiLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsU0FBUztBQUNiOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiKntcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbn1cXG5cXG5odG1se1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxufVxcblxcbmJvZHl7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLmNvbnRlbnR7XFxuICAgIGZsZXg6MTtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgNGZyO1xcbn1cXG5cXG5cXG4ucHJvamVjdC1hcmVhe1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzc5Nzc3NztcXG4gICAgcGFkZGluZzogMjBweDtcXG4gICAgZ2FwOiA1MHB4O1xcbn1cXG5cXG4udXNlci1pbmZve1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDEwcHg7XFxuICAgIGZvbnQtc2l6ZTogMjBweDtcXG59XFxuXFxuLnByb2plY3Rze1xcbiAgICBmbGV4OjE7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMjBweDtcXG59XFxuXFxuLmFkZC1saXN0e1xcbiAgICBhbGlnbi1zZWxmOiBzdHJldGNoO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDA7XFxufVxcblxcbi5hZGQtbGlzdCA+IGlucHV0e1xcbiAgICBmbGV4OiAxO1xcbiAgICBmb250LXNpemU6IDE1cHg7ICAgXFxuICAgIHBhZGRpbmc6IDVweDsgXFxufVxcblxcbi5hZGQtbGlzdC1idXR0b257XFxuICAgIGZvbnQtc2l6ZTogMTVweDsgICAgXFxuICAgIHBhZGRpbmc6IDVweDtcXG59XFxuXFxuLmxpc3QtZWxlbWVudC1jb250YWluZXJ7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogNXB4O1xcbn1cXG5cXG4uaXRlbS1lbGVtZW50LWNvbnRhaW5lcixcXG4uaGVhZGVye1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDVweDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmxpc3QtaWNvbntcXG4gICAgd2lkdGg6IDIwcHg7XFxuICAgIGhlaWdodDogMjBweDtcXG59XFxuXFxuLmxpc3QtbmFtZXtcXG4gICAgZm9udC1zaXplOiAyNXB4O1xcbiAgICBmb250LXdlaWdodDogNjAwO1xcbn1cXG5cXG4uaXRlbS1lbGVtZW50e1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDEwcHg7XFxufVxcblxcbi5pdGVtLWljb257XFxuICAgIHBhZGRpbmctbGVmdDogMjBweDtcXG4gICAgd2lkdGg6IDIwcHg7XFxuICAgIGhlaWdodDogMjBweDtcXG59XFxuXFxuLml0ZW0tdGl0bGV7XFxuICAgIGZvbnQtc2l6ZTogMjVweDtcXG59XFxuXFxuLmluZm8tYXJlYXtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcblxcbi5kaXNwbGF5LWNvbnRhaW5lcntcXG4gICAgcGFkZGluZzogNDBweCAwIDQwcHggMDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAzMHB4O1xcbn1cXG5cXG4ucHJvamVjdC1uYW1le1xcbiAgICBmb250LXNpemU6IDMwcHg7XFxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxufVxcblxcbi5hZGQtaXRlbS1idXR0b257XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgZm9udC1zaXplOiAyNXB4O1xcbiAgICBmb250LXdlaWdodDogNzAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gICAgcGFkZGluZzogMTBweCA7XFxuXFxufVxcblxcbi5wcm9qZWN0LW5hbWU6aG92ZXIsXFxuLmFkZC1pdGVtLWJ1dHRvbjpob3ZlclxcbntcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2JjYjViNTtcXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDsgICAgXFxufVxcblxcblxcbi5pdGVtLWNvbnRhaW5lcntcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLml0ZW0tdGl0bGUtZGlzcGxheXtcXG4gICAgZm9udC1zaXplOiAzMHB4O1xcbiAgICBmb250LXdlaWdodDogYm9sZDtcXG59XFxuXFxuLml0ZW0tZGVzY3JpcHRpb24tZGlzcGxheXtcXG4gICAgZm9udC1zaXplOiAyMHB4O1xcbn1cXG5cXG4uaXRlbS1wcmlvcml0eS1kaXNwbGF5e1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxufVxcbi5pdGVtLWNvbnRhaW5lciA+ICoge1xcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xcbiAgICBwYWRkaW5nOiA1cHg7XFxufVxcblxcbi5pdGVtLXN0YXR1cy1kaXNwbGF5e1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIFxcbn1cXG5cXG4udG9nZ2xpbmd7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG59XFxuXFxuLml0ZW0tZm9ybXtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICB0b3A6IDUwJTtcXG4gICAgbGVmdDogNTAlO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxMTYsIDExMiwgMTEyKTtcXG4gICAgcGFkZGluZzogNTBweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAxNXB4O1xcbn1cXG5cXG4uaXRlbS1mb3JtID4gKiB7XFxuICAgIHBhZGRpbmc6IDIwcHg7XFxuICAgIGZvbnQtc2l6ZTogMzBweDtcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXG59XFxuXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYztcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiZXhwb3J0IGNsYXNzIEl0ZW17XG4gICAgY29uc3RydWN0b3IodGl0bGUsZGVzY3JpcHRpb24scHJpb3JpdHkpe1xuICAgICAgICB0aGlzLl90aXRsZT10aXRsZTtcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRpb249ZGVzY3JpcHRpb247XG4gICAgICAgIHRoaXMuX3ByaW9yaXR5PXByaW9yaXR5O1xuICAgICAgICB0aGlzLl9zdGF0dXM9XCJUbyBEb1wiO1xuICAgIH1cblxuICAgIGdldCBkZXNjcmlwdGlvbigpe1xuICAgICAgICByZXR1cm4gdGhpcy5fZGVzY3JpcHRpb247XG4gICAgfVxuXG4gICAgZ2V0IHRpdGxlKCl7XG4gICAgICAgIHJldHVybiB0aGlzLl90aXRsZTtcbiAgICB9XG5cbiAgICBnZXQgcHJpb3JpdHkoKXtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ByaW9yaXR5O1xuICAgIH1cblxuICAgIGdldCBzdGF0dXMoKXtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3N0YXR1cztcbiAgICB9XG5cbiAgICBzZXQgZGVzY3JpcHRpb24odmFsdWUpe1xuICAgICAgICB0aGlzLl9kZXNjcmlwdGlvbj12YWx1ZTtcbiAgICB9XG4gICAgXG4gICAgc2V0IHRpdGxlKHZhbHVlKXtcbiAgICAgICAgdGhpcy5fdGl0bGU9dmFsdWU7XG4gICAgfVxuXG4gICAgc2V0IHByaW9yaXR5KHZhbHVlKXtcbiAgICAgICAgdGhpcy5fcHJpb3JpdHk9dmFsdWU7XG4gICAgfVxuXG4gICAgc2V0IHN0YXR1cyh2YWx1ZSl7XG4gICAgICAgIHRoaXMuX3N0YXR1cz12YWx1ZTtcbiAgICB9XG59IiwiaW1wb3J0IHsgSXRlbSB9IGZyb20gXCIuL0l0ZW1cIjsgIFxuXG5cbmV4cG9ydCBjbGFzcyBMaXN0e1xuICAgIGNvbnN0cnVjdG9yKG5hbWUpe1xuICAgICAgICB0aGlzLl9uYW1lPW5hbWU7XG4gICAgICAgIHRoaXMuX2xpc3Q9W107XG4gICAgfVxuXG4gICAgYWRkSXRlbShhZGRlZEl0ZW0pe1xuICAgICAgICBpZihhZGRlZEl0ZW0gaW5zdGFuY2VvZiBJdGVtKXtcbiAgICAgICAgICAgIHRoaXMuX2xpc3QucHVzaChhZGRlZEl0ZW0pO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGRlbGV0ZUl0ZW0oaXRlbVRpdGxlKXtcbiAgICAgICAgZm9yKGxldCBpPTA7aTx0aGlzLl9saXN0Lmxlbmd0aDtpKyspe1xuICAgICAgICAgICAgaWYodGhpcy5fbGlzdFtpXS50aXRsZT09PWl0ZW1UaXRsZSl7XG4gICAgICAgICAgICAgICAgdGhpcy5fbGlzdC5zcGxpY2UoaSwxKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgZ2V0IG5hbWUoKXtcbiAgICAgICAgcmV0dXJuIHRoaXMuX25hbWU7XG4gICAgfVxuXG4gICAgc2V0IG5hbWUodmFsdWUpe1xuICAgICAgICB0aGlzLl9uYW1lPXZhbHVlO1xuICAgIH1cblxuICAgIGdldCBsaXN0KCl7XG4gICAgICAgIHJldHVybiB0aGlzLl9saXN0O1xuICAgIH1cblxuICAgIHNldCBsaXN0KHZhbHVlKXtcbiAgICAgICAgdGhpcy5fbGlzdD12YWx1ZTtcbiAgICB9XG5cbn0iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCB7IExpc3QgfSBmcm9tIFwiLi4vY2xhc3Nlcy9MaXN0XCI7XG5pbXBvcnQgeyBJdGVtIH0gZnJvbSBcIi4uL2NsYXNzZXMvSXRlbVwiO1xuaW1wb3J0IGN1YmVJY29uIGZyb20gXCIuL2ltYWdlcy9jdWJlLnN2Z1wiO1xuaW1wb3J0IGNpcmNsZUljb24gZnJvbSBcIi4vaW1hZ2VzL2NpcmNsZS5zdmdcIjtcbmltcG9ydCB7IHByb2plY3QgfSBmcm9tIFwiLi4vaW5kZXguanNcIjtcblxuXG5leHBvcnQgY2xhc3MgZG9tTWFuaXB1bGF0aW9ue1xuXG4gICAgc3RhdGljIGFwcGVuZExpc3RFbGVtZW50KGxpc3RPYmope1xuXG4gICAgICAgIGNvbnN0IGxpc3RFbGVtZW50Q29udGFpbmVyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIGxpc3RFbGVtZW50Q29udGFpbmVyLmNsYXNzTmFtZT1cImxpc3QtZWxlbWVudC1jb250YWluZXJcIjtcblxuICAgICAgICBcbiAgICAgICAgY29uc3QgbGlzdEljb249bmV3IEltYWdlKCk7XG4gICAgICAgIGxpc3RJY29uLmNsYXNzTmFtZT1cImxpc3QtaWNvblwiO1xuICAgICAgICBsaXN0SWNvbi5zcmM9Y2lyY2xlSWNvbjtcblxuICAgICAgICBjb25zdCBsaXN0TmFtZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBsaXN0TmFtZS5jbGFzc05hbWU9XCJsaXN0LW5hbWVcIjtcbiAgICAgICAgbGlzdE5hbWUudGV4dENvbnRlbnQ9bGlzdE9iai5uYW1lO1xuXG4gICAgICAgIGNvbnN0IGhlYWRlcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBoZWFkZXIuY2xhc3NOYW1lPVwiaGVhZGVyXCI7XG4gICAgICAgIGhlYWRlci5hcHBlbmRDaGlsZChsaXN0SWNvbik7XG4gICAgICAgIGhlYWRlci5hcHBlbmRDaGlsZChsaXN0TmFtZSk7XG5cbiAgICAgICAgaGVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57XG4gICAgICAgICAgICBkb21NYW5pcHVsYXRpb24uZGlzcGxheUxpc3QobGlzdE9iaik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGxpc3RFbGVtZW50Q29udGFpbmVyLmFwcGVuZENoaWxkKGhlYWRlcik7XG5cbiAgICAgICAgZm9yKGxldCBpPTA7aTxsaXN0T2JqLmxpc3QubGVuZ3RoO2krKyl7XG4gICAgICAgICAgICBsZXQgaXRlbT1saXN0T2JqLmxpc3RbaV07XG4gICAgICAgICAgICBsaXN0RWxlbWVudENvbnRhaW5lci5hcHBlbmRDaGlsZChkb21NYW5pcHVsYXRpb24uY3JlYXRlSXRlbUVsZW1lbnQoaXRlbSkpO1xuICAgICAgICB9XG5cbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHByb2plY3RkaXY9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0c1wiKTtcbiAgICAgICAgcHJvamVjdGRpdi5hcHBlbmRDaGlsZChsaXN0RWxlbWVudENvbnRhaW5lcik7XG5cbiAgICAgICAgcHJvamVjdC5hZGRUb0RvTGlzdChsaXN0T2JqKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZGVsZXRlTGlzdEVsZW1lbnQobGlzdE5hbWUpe1xuICAgICAgICBjb25zdCBwcm9qZWN0ZGl2PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdHNcIik7XG4gICAgICAgIHByb2plY3QuZGVsZXRlVG9Eb0xpc3QobGlzdE5hbWUpO1xuXG4gICAgICAgIGZvcihsZXQgaT0wO2k8cHJvamVjdGRpdi5jaGlsZE5vZGVzLmxlbmd0aDtpKyspe1xuICAgICAgICAgICAgY29uc3QgY2hpbGQ9cHJvamVjdGRpdi5jaGlsZE5vZGVzW2ldO1xuICAgICAgICAgICAgaWYoY2hpbGQuY2xhc3NOYW1lPT09bGlzdE5hbWUpe1xuICAgICAgICAgICAgICAgIHByb2plY3RkaXYucmVtb3ZlQ2hpbGQoY2hpbGQpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBzdGF0aWMgY3JlYXRlSXRlbUVsZW1lbnQoaXRlbSl7XG4gICAgICAgIGNvbnN0IGl0ZW1FbGVtZW50Q29udGFpbmVyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIGl0ZW1FbGVtZW50Q29udGFpbmVyLmNsYXNzTmFtZT1cIml0ZW0tZWxlbWVudC1jb250YWluZXJcIjtcblxuICAgICAgICBjb25zdCBpdGVtSWNvbj1uZXcgSW1hZ2UoKTtcbiAgICAgICAgaXRlbUljb24uc3JjPWN1YmVJY29uO1xuICAgICAgICBpdGVtSWNvbi5jbGFzc05hbWU9XCJpdGVtLWljb25cIjtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGl0ZW1OYW1lPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIGl0ZW1OYW1lLnRleHRDb250ZW50PWl0ZW0udGl0bGU7XG4gICAgICAgIGl0ZW1OYW1lLmNsYXNzTmFtZT1cIml0ZW0tdGl0bGVcIjtcblxuICAgICAgICBpdGVtRWxlbWVudENvbnRhaW5lci5hcHBlbmRDaGlsZChpdGVtSWNvbik7XG4gICAgICAgIGl0ZW1FbGVtZW50Q29udGFpbmVyLmFwcGVuZENoaWxkKGl0ZW1OYW1lKTtcbiAgICAgICAgcmV0dXJuIGl0ZW1FbGVtZW50Q29udGFpbmVyO1xuICAgIH1cblxuXG4gICAgc3RhdGljIGFwcGx5QWRkaW5nTGlzdCgpe1xuICAgICAgICBjb25zdCBpbnB1dFRleHQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtbGlzdC1pbnB1dFwiKTtcbiAgICAgICAgY29uc3QgbmFtZT1pbnB1dFRleHQudmFsdWU7XG4gICAgICAgIGlmKG5hbWU9PT1cIlwiKSByZXR1cm4gO1xuICAgICAgICBjb25zdCBuZXdMaXN0PW5ldyBMaXN0KG5hbWUpO1xuICAgICAgICBkb21NYW5pcHVsYXRpb24uYXBwZW5kTGlzdEVsZW1lbnQobmV3TGlzdCk7ICAgIFxuICAgICAgICBpbnB1dFRleHQudmFsdWU9XCJcIjtcbiAgICAgICAgcmV0dXJuIG5ld0xpc3Q7XG4gICAgfVxuXG4gICAgc3RhdGljIGRpc3BsYXlMaXN0KGxpc3RPYmope1xuICAgICAgICBjb25zdCBkaXNwbGF5Q29udGFpbmVyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIGRpc3BsYXlDb250YWluZXIuY2xhc3NOYW1lPVwiZGlzcGxheS1jb250YWluZXJcIjtcblxuICAgICAgICBjb25zdCBwcm9qZWN0TmFtZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBwcm9qZWN0TmFtZS5jbGFzc05hbWU9XCJwcm9qZWN0LW5hbWVcIjtcbiAgICAgICAgcHJvamVjdE5hbWUudGV4dENvbnRlbnQ9bGlzdE9iai5uYW1lO1xuXG4gICAgICAgIGNvbnN0IGFkZEl0ZW1CdXR0b249ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICAgICAgYWRkSXRlbUJ1dHRvbi5jbGFzc05hbWU9XCJhZGQtaXRlbS1idXR0b25cIjtcbiAgICAgICAgYWRkSXRlbUJ1dHRvbi50ZXh0Q29udGVudD1cIisgQWRkIEl0ZW1cIjtcbiAgICAgICAgYWRkSXRlbUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKT0+e1xuICAgICAgICAgICAgZG9tTWFuaXB1bGF0aW9uLnNob3dJdGVtRm9ybShsaXN0T2JqKTtcbiAgICAgICAgfSk7XG5cblxuICAgICAgICBkaXNwbGF5Q29udGFpbmVyLmFwcGVuZENoaWxkKHByb2plY3ROYW1lKTtcbiAgICAgICAgZGlzcGxheUNvbnRhaW5lci5hcHBlbmRDaGlsZChhZGRJdGVtQnV0dG9uKTtcbiAgICAgICAgXG4gICAgICAgIGZvcihsZXQgaT0wO2k8bGlzdE9iai5saXN0Lmxlbmd0aDtpKyspe1xuICAgICAgICAgICAgZGlzcGxheUNvbnRhaW5lci5hcHBlbmRDaGlsZChkb21NYW5pcHVsYXRpb24uZGlzcGxheUl0ZW0obGlzdE9iai5saXN0W2ldKSk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBpbmZvQXJlYT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmluZm8tYXJlYVwiKTtcbiAgICAgICAgd2hpbGUoaW5mb0FyZWEuY2hpbGROb2Rlc1swXSE9PXVuZGVmaW5lZCl7XG4gICAgICAgICAgICBpbmZvQXJlYS5yZW1vdmVDaGlsZChpbmZvQXJlYS5jaGlsZE5vZGVzWzBdKTtcbiAgICAgICAgfVxuICAgICAgICBpbmZvQXJlYS5hcHBlbmRDaGlsZChkaXNwbGF5Q29udGFpbmVyKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZGlzcGxheUl0ZW0oaXRlbU9iail7XG4gICAgICAgIGNvbnN0IGl0ZW1Db250YWluZXI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgaXRlbUNvbnRhaW5lci5jbGFzc05hbWU9XCJpdGVtLWNvbnRhaW5lclwiO1xuXG4gICAgICAgIGNvbnN0IGl0ZW1UaXRsZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBpdGVtVGl0bGUuY2xhc3NOYW1lPVwiaXRlbS10aXRsZS1kaXNwbGF5XCI7XG4gICAgICAgIGl0ZW1UaXRsZS50ZXh0Q29udGVudD1pdGVtT2JqLnRpdGxlO1xuXG4gICAgICAgIGNvbnN0IGl0ZW1EZXNjcmlwdGlvbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBpdGVtRGVzY3JpcHRpb24uY2xhc3NOYW1lPVwiaXRlbS1kZXNjcmlwdGlvbi1kaXNwbGF5XCI7XG4gICAgICAgIGl0ZW1EZXNjcmlwdGlvbi50ZXh0Q29udGVudD1cIkRFU0NSSVBUSU9OOiBcIitpdGVtT2JqLmRlc2NyaXB0aW9uO1xuXG4gICAgICAgIGNvbnN0IGl0ZW1Qcmlvcml0eT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBpdGVtUHJpb3JpdHkuY2xhc3NOYW1lPVwiaXRlbS1wcmlvcml0eS1kaXNwbGF5XCI7XG4gICAgICAgIGl0ZW1Qcmlvcml0eS50ZXh0Q29udGVudD1cIlByaW9yaXR5OiBcIitpdGVtT2JqLnByaW9yaXR5O1xuXG4gICAgICAgIGNvbnN0IGl0ZW1TdGF0dXM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgaXRlbVN0YXR1cy5jbGFzc05hbWU9XCJpdGVtLXN0YXR1cy1kaXNwbGF5XCI7XG4gICAgICAgIGl0ZW1TdGF0dXMuY2xhc3NMaXN0LmFkZChcInRvZ2dsaW5nXCIpO1xuICAgICAgICBpdGVtU3RhdHVzLnRleHRDb250ZW50PVwiU1RBVFVTOiBcIiAraXRlbU9iai5zdGF0dXM7XG4gICAgICAgIGRvbU1hbmlwdWxhdGlvbi5zdGF0dXNDb2xvcihpdGVtU3RhdHVzKTtcblxuICAgICAgICBpdGVtQ29udGFpbmVyLmFwcGVuZENoaWxkKGl0ZW1UaXRsZSk7XG4gICAgICAgIGl0ZW1Db250YWluZXIuYXBwZW5kQ2hpbGQoaXRlbURlc2NyaXB0aW9uKTtcbiAgICAgICAgaXRlbUNvbnRhaW5lci5hcHBlbmRDaGlsZChpdGVtUHJpb3JpdHkpO1xuICAgICAgICBpdGVtQ29udGFpbmVyLmFwcGVuZENoaWxkKGl0ZW1TdGF0dXMpO1xuXG4gICAgICAgIHJldHVybiBpdGVtQ29udGFpbmVyO1xuICAgIH1cblxuICAgIHN0YXRpYyBzdGF0dXNDb2xvcihpdGVtU3RhdHVzKXtcbiAgICAgICAgaXRlbVN0YXR1cy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKT0+e1xuICAgICAgICAgICAgaWYoaXRlbVN0YXR1cy50ZXh0Q29udGVudD09PVwiU1RBVFVTOiBUbyBEb1wiKXtcbiAgICAgICAgICAgICAgICBpdGVtU3RhdHVzLnRleHRDb250ZW50PVwiU1RBVFVTOiBEb25lXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgIGl0ZW1TdGF0dXMudGV4dENvbnRlbnQ9XCJTVEFUVVM6IFRvIERvXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpdGVtU3RhdHVzLmNsYXNzTGlzdC50b2dnbGUoXCJ0b2dnbGluZ1wiKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgc3RhdGljIHNob3dJdGVtRm9ybShsaXN0T2JqKXtcbiAgICAgICAgY29uc3QgZm9ybT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiKTtcbiAgICAgICAgZm9ybS5jbGFzc05hbWU9XCJpdGVtLWZvcm1cIjtcblxuXG4gICAgICAgIGNvbnN0IHRpdGxlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICAgICAgdGl0bGUucGxhY2Vob2xkZXI9XCJUaXRsZVwiO1xuICAgICAgICB0aXRsZS5uYW1lPVwiVGl0bGVcIjtcbiAgICAgICAgdGl0bGUucmVxdWlyZWQ9dHJ1ZTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICAgICAgZGVzY3JpcHRpb24ucGxhY2Vob2xkZXI9XCJEZXNjcmlwdGlvblwiO1xuICAgICAgICBkZXNjcmlwdGlvbi5uYW1lPVwiRGVzY3JpcHRpb25cIjtcbiAgICAgICAgZGVzY3JpcHRpb24ucmVxdWlyZWQ9dHJ1ZTtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBjb25zdCBwcmlvcml0eT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICAgIHByaW9yaXR5LnBsYWNlaG9sZGVyPVwiUHJpb3JpdHlcIjtcbiAgICAgICAgcHJpb3JpdHkubmFtZT1cIlByaW9yaXR5XCI7XG4gICAgICAgIHByaW9yaXR5LnJlcXVpcmVkPXRydWU7XG4gICAgICAgIHByaW9yaXR5LnR5cGU9XCJudW1iZXJcIjtcblxuICAgICAgICBjb25zdCBkdWVEYXRlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICAgICAgLy8gZHVlRGF0ZS5wbGFjZWhvbGRlcj1cIk1NL2RkL3l5eXlcIjtcbiAgICAgICAgZHVlRGF0ZS5uYW1lPVwiZHVlRGF0ZVwiO1xuICAgICAgICBkdWVEYXRlLnJlcXVpcmVkPXRydWU7XG4gICAgICAgIGR1ZURhdGUudHlwZT1cImRhdGVcIjtcblxuICAgICAgICBjb25zdCBidXR0b249ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICAgICAgYnV0dG9uLnRleHRDb250ZW50PVwiQWRkIEl0ZW1cIjtcbiAgICAgICAgYnV0dG9uLm5hbWU9XCJBZGQgSXRlbVwiO1xuXG4gICAgICAgIGZvcm0uYXBwZW5kQ2hpbGQodGl0bGUpO1xuICAgICAgICBmb3JtLmFwcGVuZENoaWxkKGRlc2NyaXB0aW9uKTtcbiAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChwcmlvcml0eSk7XG4gICAgICAgIGZvcm0uYXBwZW5kQ2hpbGQoZHVlRGF0ZSk7XG4gICAgICAgIGZvcm0uYXBwZW5kQ2hpbGQoYnV0dG9uKTtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBjb25zdCBib2R5PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5XCIpO1xuICAgICAgICBib2R5LmFwcGVuZENoaWxkKGZvcm0pO1xuXG4gICAgICAgIGxldCBpdGVtb2JqO1xuICAgICAgICBmb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwoZSk9PntcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGUuY3VycmVudFRhcmdldC5kdWVEYXRlLnZhbHVlKTtcbiAgICAgICAgICAgIGl0ZW1vYmo9bmV3IEl0ZW0oZS5jdXJyZW50VGFyZ2V0LlRpdGxlLnZhbHVlLGUuY3VycmVudFRhcmdldC5EZXNjcmlwdGlvbi52YWx1ZSAsZS5jdXJyZW50VGFyZ2V0LlByaW9yaXR5LnZhbHVlKTtcbiAgICAgICAgICAgIGxpc3RPYmoubGlzdC5wdXNoKGl0ZW1vYmopO1xuICAgICAgICAgICAgbGV0IGl0ZW09ZG9tTWFuaXB1bGF0aW9uLmRpc3BsYXlJdGVtKGl0ZW1vYmopO1xuICAgICAgICAgICAgY29uc3QgY29udGFpbmVyPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZGlzcGxheS1jb250YWluZXJcIik7XG4gICAgICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoaXRlbSk7XG5cbiAgICAgICAgICAgIGNvbnN0IGJvZHk9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJvZHlcIik7XG4gICAgICAgICAgICBib2R5LnJlbW92ZUNoaWxkKGZvcm0pO1xuICAgICAgICB9KTtcbiAgICB9XG59IiwiaW1wb3J0IHtJdGVtfSBmcm9tICcuL2NsYXNzZXMvSXRlbSc7XG5pbXBvcnQge0xpc3R9IGZyb20gJy4vY2xhc3Nlcy9MaXN0JztcbmltcG9ydCB7UHJvamVjdH0gZnJvbSAnLi9jbGFzc2VzL1Byb2plY3QnO1xuaW1wb3J0IFwiLi9jc3Mvc3R5bGVzLmNzc1wiO1xuaW1wb3J0IHsgZG9tTWFuaXB1bGF0aW9uIH0gZnJvbSAnLi9ET00vZG9tTWFuaXB1bGF0b3InO1xuXG5cblxuY29uc3QgYWRkTGlzdGJ1dHRvbj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFkZC1saXN0LWJ1dHRvblwiKTtcbmFkZExpc3RidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZG9tTWFuaXB1bGF0aW9uLmFwcGx5QWRkaW5nTGlzdCk7XG5cblxubGV0IHByb2plY3Q9bmV3IFByb2plY3QoXCJtYWhtb3VkIEFobWVkIEFiZHVsc2hha291clwiKTtcblxubGV0IGl0ZW09bmV3IEl0ZW0oXCJUT1BcIixcIkZJTklTSCBUT0RPTElTVCBQUk9KRUNUXCIsMSk7XG5sZXQgbGlzdD1uZXcgTGlzdChcIldvcmtcIik7XG5saXN0LmFkZEl0ZW0oaXRlbSk7XG5cblxuZG9tTWFuaXB1bGF0aW9uLmFwcGVuZExpc3RFbGVtZW50KGxpc3QpO1xuZG9tTWFuaXB1bGF0aW9uLmRpc3BsYXlMaXN0KGxpc3QpO1xuZXhwb3J0IHtwcm9qZWN0fTsiLCJpbXBvcnQge0xpc3R9IGZyb20gJy4vTGlzdCc7XG5cbmV4cG9ydCBjbGFzcyBQcm9qZWN0e1xuXG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgdGhpcy5fbGlzdD1bXTtcbiAgICB9XG5cbiAgICBhZGRUb0RvTGlzdChhZGRlZExpc3Qpe1xuICAgICAgICBpZihhZGRlZExpc3QgaW5zdGFuY2VvZiBMaXN0KXtcbiAgICAgICAgICAgIHRoaXMuX2xpc3QucHVzaChhZGRlZExpc3QpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGRlbGV0ZVRvRG9MaXN0KExpc3ROYW1lKXtcbiAgICAgICAgZm9yKGxldCBpPTA7aTx0aGlzLl9saXN0Lmxlbmd0aDtpKyspe1xuICAgICAgICAgICAgaWYodGhpcy5fbGlzdFtpXS5uYW1lPT09TGlzdE5hbWUpe1xuICAgICAgICAgICAgICAgIHRoaXMuX2xpc3Quc3BsaWNlKGksMSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGdldCBsaXN0KCl7XG4gICAgICAgIHJldHVybiB0aGlzLl9saXN0O1xuICAgIH1cblxuICAgIHNldCBsaXN0KHZhbHVlKXtcbiAgICAgICAgdGhpcy5fbGlzdD12YWx1ZTtcbiAgICB9XG59Il0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInJlcGxhY2UiLCJwIiwibmMiLCJJdGVtIiwiY29uc3RydWN0b3IiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwicHJpb3JpdHkiLCJfdGl0bGUiLCJfZGVzY3JpcHRpb24iLCJfcHJpb3JpdHkiLCJfc3RhdHVzIiwic3RhdHVzIiwidmFsdWUiLCJMaXN0IiwibmFtZSIsIl9uYW1lIiwiX2xpc3QiLCJhZGRJdGVtIiwiYWRkZWRJdGVtIiwiZGVsZXRlSXRlbSIsIml0ZW1UaXRsZSIsImRvbU1hbmlwdWxhdGlvbiIsInN0YXRpYyIsImxpc3RPYmoiLCJsaXN0RWxlbWVudENvbnRhaW5lciIsImNsYXNzTmFtZSIsImxpc3RJY29uIiwiSW1hZ2UiLCJsaXN0TmFtZSIsInRleHRDb250ZW50IiwiaGVhZGVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImRpc3BsYXlMaXN0IiwiY3JlYXRlSXRlbUVsZW1lbnQiLCJwcm9qZWN0IiwiYWRkVG9Eb0xpc3QiLCJwcm9qZWN0ZGl2IiwiZGVsZXRlVG9Eb0xpc3QiLCJjaGlsZE5vZGVzIiwiY2hpbGQiLCJpdGVtRWxlbWVudENvbnRhaW5lciIsIml0ZW1JY29uIiwiaXRlbU5hbWUiLCJpbnB1dFRleHQiLCJhcHBlbmRMaXN0RWxlbWVudCIsImRpc3BsYXlDb250YWluZXIiLCJwcm9qZWN0TmFtZSIsImFkZEl0ZW1CdXR0b24iLCJzaG93SXRlbUZvcm0iLCJkaXNwbGF5SXRlbSIsImluZm9BcmVhIiwiaXRlbU9iaiIsIml0ZW1Db250YWluZXIiLCJpdGVtRGVzY3JpcHRpb24iLCJpdGVtUHJpb3JpdHkiLCJpdGVtU3RhdHVzIiwiY2xhc3NMaXN0IiwiYWRkIiwic3RhdHVzQ29sb3IiLCJ0b2dnbGUiLCJmb3JtIiwicGxhY2Vob2xkZXIiLCJyZXF1aXJlZCIsInR5cGUiLCJkdWVEYXRlIiwiYnV0dG9uIiwiaXRlbW9iaiIsInByZXZlbnREZWZhdWx0IiwiY3VycmVudFRhcmdldCIsIlRpdGxlIiwiRGVzY3JpcHRpb24iLCJQcmlvcml0eSIsImFwcGx5QWRkaW5nTGlzdCIsImFkZGVkTGlzdCIsIkxpc3ROYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==